# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  build-and-test:
    # These next lines define a Docker executor: https://circleci.com/docs/2.0/executor-types/
    # You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # Be sure to update the Docker image tag below to openjdk version of your application.
    # A list of available CircleCI Docker Convenience Images are available here: https://circleci.com/developer/images/image/cimg/openjdk
    docker:
      - image: cimg/openjdk:17.0.5
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      # Adding SSH-Key
      - add_ssh_keys:
            fingerprints:
              - "69:5a:65:ef:22:8c:52:a8:3e:53:cb:59:52:ca:0d:c0"
      # Checkout the code as the first step.
      - checkout
      # Use mvn clean and package as the standard maven build phase
      - run:
          name: Build
          command: mvn -B -DskipTests clean package
      # Then run your tests!
      - run:
          name: Test
          command: mvn test
      # Deploy to PackageCloud and read settings from circleci directory
#      - run:
#          name: Deploy
#          command: mvn deploy -s .circleci/settings.xml -Ppackagecloud
      # Release PackageCloud
      - run: git config user.email "wtk4949@gmail.com"
      - run: git config user.name "via CircleCI Build"
      - run:
          name: Release
          command: mvn --batch-mode release:prepare release:perform -s .circleci/settings.xml -Ppackagecloud

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  sample: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - build-and-test